#!/bin/bash
#===============================================================================
# See if this instance appears to have everything installed as expected.
# This is for provision-ubuntu-16.04-javatrain.
#
# Version: 2.0.0
# Date: 11 Jun 2016
# Author: Dave Nicolette
#===============================================================================

echo
echo '============================================================='
echo 'Verifying configuration of Scala training environment'
echo 'This is version 2.0.0 of the verify script (11 Jun 2016)'

declare -i errors=0

declare -a pkg
pkg[${#pkg[@]}]='build-essential'
pkg[${#pkg[@]}]="linux-headers-$(uname -r)"
pkg[${#pkg[@]}]='dkms'
pkg[${#pkg[@]}]='python-software-properties'
pkg[${#pkg[@]}]='scala '

for name in "${pkg[@]}"
do
  if [[ -n "$(dpkg -l | grep ${name})" ]]; then
    dpkg -l | grep "${name}" | awk -F" " '{print "       package " $2 "\tversion " $3}'
  else
      echo "ERROR: package ${name} was expected but is not installed"
      errors="${errors}+1"
  fi
done

declare -a app
app[${#app[@]}]="/usr/bin/atom"
app[${#app[@]}]="/opt/idea"
app[${#app[@]}]="/usr/bin/git"
app[${#app[@]}]="/usr/lib/jvm/java-8-openjdk-amd64/bin/java"

declare -a ver
ver[${#ver[@]}]=$(atom --version | grep "Atom" | awk -F" " '{print $3}')
ver[${#ver[@]}]=$(cat /opt/idea/build.txt)
ver[${#ver[@]}]=$(git --version | awk -F" " '{print $3}')
ver[${#ver[@]}]=$(java -version 2> tmp; cat tmp | head -1 | awk -F" " '{print $3}')

#for name in "${app[@]}"
element_count=${#app[@]}
index=0
while [ "$index" -lt "$element_count" ]
do
  if [[ -e "${app[$index]}" ]]; then
      echo "       program ${app[$index]} | version ${ver[$index]}"
  else
      echo "ERROR: program ${app[$index]} was expected but is not installed"
      errors="${errors}+1"
  fi
  ((index++))
done

test "${errors}" -eq 0 && echo "...configuration is as expected." || echo "...${errors} expected package(s) or application(s) not found! Configuration may not function as desired."
